public class Vertex {

    private char label;
    private int labelI;
    private final char labels[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".toCharArray();
    private boolean isVisited = false;
    private int position;
    private char parent;
    private int parentI;
    
    public Vertex(){
        
    }
   
    public Vertex(int position) {
        this.position = position;
        this.labelI = position;
    }
    
    public Vertex(char c){
        this.position = getVertPos(c);
        this.label = c;
        
    }

    public int getLabelI() {
        return labelI;
    }

    public void setLabelI(int labelI) {
        this.labelI = labelI;
    }

    
    public void setLable(char label) {
        this.label = label;
    }

    public boolean getIsVisited() {
        return isVisited;
    }

    public void setIsVisited(boolean isVisited) {
        this.isVisited = isVisited;
    }

    public char getLabel() {
        return label;
    }

    public void setLabel(char label) {
        this.label = label;
    }

    public int getPosition() {
        return position;
    }

    public void setPosition(int position) {
        this.position = position;
    }


    private int getVertPos(char label_c) {
        //retrun the index of the vertex
        //if not found retun -1
        for (int i = 0; i < labels.length; i++) {
            if (labels[i] == label_c) {
                return i;
            }
        }
        return -1;
    }
    
    
    public String displayInfo(){
     return "";   
    }

}
